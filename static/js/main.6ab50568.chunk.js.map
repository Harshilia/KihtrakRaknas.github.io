{"version":3,"sources":["logo.svg","favicon.ico","Imgs/Karthik.JPG","Imgs/Karthik-compressed.jpg","App.js","Sections/Top.js","Sections/AboutMe.js","Components/ProjectCard.js","Components/MasonryCardDisplay.js","Projects.js","Sections/ProjectsPage.js","Sections/AroundTheWeb.js","Homepage.js","serviceWorker.js","index.js"],"names":["module","exports","App","ReactRotatingText","require","Top","bgImage","bgImageAlt","strength","style","height","centered","className","speed","fontSize","color","fontWeight","items","React","Component","AboutMe","vmin","window","innerHeight","innerWidth","state","min","this","getMin","setState","updateDimensions","addEventListener","bind","removeEventListener","bottom","class","left","icon","faSearchLocation","size","Math","round","marginRight","faSchool","faRobot","href","faBriefcase","right","faLaptopCode","ProjectCard","props","formatName","name","backgoundColor","faJs","includes","faReact","faNodeJs","faGoogle","faFire","faHtml5","faCss3Alt","faJava","faGlobe","faServer","faGooglePlay","faAndroid","faAppStore","backgroundColor","componentDidUpdate","tags","languages","length","concat","tools","updateTags","update","RepoName","fetch","GithubUsername","GithubBranch","then","response","json","message","lastMonth","Date","commit","author","date","toLocaleString","month","lastYear","getFullYear","end","getTime","catch","error","console","log","description","title","code","firstMonth","created_at","firstYear","start","svn_url","language","columns","width","parse","filterTerms","push","lang","tool","types","type","imgSrc","img","project","encodeURIComponent","page","btnSize","data-filter","JSON","stringify","onLoad","onError","src","alt","data-start","data-end","globalKeys","globalSortKey","globalSortAscending","MasonryCardDisplay","node","ReactDOM","findDOMNode","offsetWidth","setSort","key","switchSort","isotope","arrange","sortBy","sortAscending","updateFilter","keys","filter","dataset","overflowY","children","map","childa","other","reloadItems","Isotope","itemSelector","masonry","horizontalOrder","gutter","percentPosition","getSortData","itemElem","getElementsByClassName","Number","Infinity","layout","Projects","ProjectsPage","sortBtns","data-toggle","onClick","current","reverseSort","id","autocomplete","checked","filterDropDowns","searchOptions","tag","value","label","options","placeholder","onChange","filterSelected","isMulti","selctions","item","newTags","indexOf","createRef","showMobileBtns","display","ref","AroundTheWeb","captcha","loading","sitekey","email","Homepage","favicon","data-target","aria-controls","aria-expanded","aria-label","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ab50568.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.291eccc8.ico\";","module.exports = __webpack_public_path__ + \"static/media/Karthik.59770943.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Karthik-compressed.5bd405d1.jpg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n       <p class=\"text-center\">\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Parallax as ImgPara } from 'react-parallax';\r\nimport Parallax from 'react-rellax';\r\nimport './Top.css';\r\nvar ReactRotatingText = require('react-rotating-text');\r\n\r\nexport default class Top extends React.Component {\r\n    render(){\r\n        return(\r\n            <ImgPara\r\n                bgImage = {require('../Imgs/Karthik.JPG')}\r\n                bgImageAlt=\"A picture of Karthik Sankar\"\r\n                strength={-300}\r\n            >\r\n                <div style={{ height: '100vh' }} >\r\n                    <Parallax centered={true} className=\"center-vert\" speed={10} style={{fontSize:\"10vh\",color:\"black\", fontWeight: \"bold\"}}><ReactRotatingText items={['Karthik Sankar', 'Kihtrak Raknas']} /></Parallax>\r\n                </div>\r\n            </ImgPara>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Parallax as ImgPara } from 'react-parallax';\r\nimport Parallax from 'react-rellax';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport Jump from 'react-reveal/Jump';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome , faSchool ,faSearchLocation, faBriefcase , faRobot, faLaptopCode} from '@fortawesome/free-solid-svg-icons'\r\nimport './AboutMe.css'\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Slide from 'react-reveal/Slide';\r\nvar ReactRotatingText = require('react-rotating-text');\r\n\r\n\r\nexport default class AboutMe extends React.Component {\r\n    constructor(){\r\n        super();\r\n        var vmin = window.innerHeight\r\n        if(window.innerWidth<vmin)\r\n            vmin = window.innerWidth\r\n        this.state = {\r\n            vmin:  vmin\r\n        }\r\n\r\n    }\r\n\r\n    getMin() {\r\n        if(window.innerWidth<window.innerHeight)\r\n            return window.innerWidth\r\n        return window.innerHeight\r\n    }\r\n\r\n    updateDimensions() {\r\n        var min = this.getMin()\r\n            this.setState({ vmin: min });\r\n    }\r\n\r\n\r\n    \r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <br/>\r\n                <br/>\r\n                <Bounce bottom>\r\n                    <h1 className=\"text-center display-2\">About Me</h1>\r\n                </Bounce>\r\n                <Jump>\r\n                    \r\n                </Jump>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 text-center\">\r\n                        <Zoom left>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faSearchLocation} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">New Jersery</span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faSchool} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">South Brunswick High School</span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faRobot} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">Captain of <a href=\"http://750s.github.io\">750S</a></span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faBriefcase} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">Teach programming @ Code Ninjas</span>\r\n                            </div>\r\n                            <br/>\r\n                        </Zoom>\r\n                    </div>\r\n                    <div class=\"col-md-6 text-center\">\r\n                        <Slide right>\r\n                            <FontAwesomeIcon icon={faLaptopCode} size={Math.round(this.state.vmin/175)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                            <p className=\"about-txt\">Full stack developer</p>\r\n                            <p className=\"about-txt\">Fluent in HTML, CSS, Javascript & Node.js</p>\r\n                            <p className=\"about-txt\">Favorate frameworks: React & React Native</p>\r\n                            <p className=\"about-txt\">Favorate Editors: Andriod Studio, Visual Studio Code & Xcode</p>\r\n                        </Slide>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faJs, faReact, faNodeJs, faGoogle, faHtml5, faCss3Alt, faJava, faAndroid, faAppStore, faAppStoreIos, faGooglePlay} from '@fortawesome/free-brands-svg-icons'\r\nimport { faFire, faGlobe, faServer} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class ProjectCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.RepoName){\r\n            fetch(\r\n                `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}/branches/${this.props.GithubBranch?this.props.GithubBranch:\"master\"}`\r\n            )\r\n            .then(response => {\r\n                response.json().then(json => {\r\n                    if(!json.message)\r\n                        this.setState({\r\n                            lastMonth: new Date(json.commit.commit.author.date).toLocaleString('default', { month: 'long' }),\r\n                            lastYear: new Date(json.commit.commit.author.date).getFullYear(),\r\n                            end: new Date(json.commit.commit.author.date).getTime()\r\n                        });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n            fetch(\r\n                `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}`\r\n            )\r\n            .then(response => {\r\n                response.json().then(json => {\r\n                    if(!json.message)\r\n                        this.setState({\r\n                            firstMonth: new Date(json.created_at).toLocaleString('default', { month: 'long' }),\r\n                            firstYear: new Date(json.created_at).getFullYear(),\r\n                            start: new Date(json.created_at).getTime(),\r\n                            description: json.description,\r\n                            title: json.name,\r\n                            code: json.svn_url,\r\n                            language: json.language,\r\n                        });\r\n                    else   \r\n                        this.setState({\r\n                            description: \"Additional details couldn't be loaded in. Try again tommarrow or use a different network.\",\r\n                            title: this.props.RepoName,\r\n                            code: `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}`,\r\n                        });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    formatName = (name) =>{\r\n        let icon = null;\r\n        let backgoundColor = \"black\";\r\n        let color = \"white\"\r\n        if(name == \"JavaScript\"){\r\n            icon = <FontAwesomeIcon icon={faJs}/>\r\n            backgoundColor = \"#f0db4f\"\r\n            color = \"black\"\r\n        }else if(name && name.includes(\"React\")){\r\n            icon = <FontAwesomeIcon icon={faReact}/>\r\n            backgoundColor = \"#61dbfb\"\r\n            color = \"black\"\r\n        }else if(name == \"Node.js\"){\r\n            icon = <FontAwesomeIcon icon={faNodeJs}/>\r\n            backgoundColor = \"#68A063\"\r\n            color = \"white\"\r\n        }else if(name&&name.includes(\"Google\")){\r\n            icon = <FontAwesomeIcon icon={faGoogle}/>\r\n            backgoundColor = \"#4285F4\"\r\n            color = \"white\"\r\n        }else if(name&&name.includes(\"Firebase\")){\r\n            icon = <FontAwesomeIcon icon={faFire}/>\r\n            backgoundColor = \"#FFCA28\"\r\n            color = \"black\"\r\n        }else if(name&&name.includes(\"HTML\")){\r\n            icon = <FontAwesomeIcon icon={faHtml5}/>\r\n            backgoundColor = \"#F16529\"\r\n            color = \"white\"\r\n        }else if(name == \"CSS\"){\r\n            icon = <FontAwesomeIcon icon={faCss3Alt}/>\r\n            backgoundColor = \"#264de4\"\r\n            color = \"white\"\r\n        }else if(name == \"Java\"){\r\n            icon = <FontAwesomeIcon icon={faJava}/>\r\n            backgoundColor = \"#f89820\"\r\n            color = \"black\"//\r\n        }else if(name == \"Website\"){\r\n            icon = <FontAwesomeIcon icon={faGlobe}/>\r\n        }else if(name == \"Server\"){\r\n            icon = <FontAwesomeIcon icon={faServer}/>\r\n        }else if(name==\"Andriod App\"){\r\n            icon = <FontAwesomeIcon icon={faGooglePlay}/>\r\n            backgoundColor=\"#3BCCFF\"\r\n            color=\"white\"\r\n        }else if(name&&name.includes(\"Andriod\")){\r\n            icon = <FontAwesomeIcon icon={faAndroid}/>\r\n            backgoundColor=\"#a4c639\"\r\n            color=\"black\"\r\n        }else if(name == \"iOS App\"){\r\n            icon = <FontAwesomeIcon icon={faAppStore}/>\r\n            backgoundColor = \"#007AFF\"\r\n            color=\"white\"\r\n        }\r\n        return(\r\n            <span class=\"badge\" style={{marginRight:\"5px\", backgroundColor:backgoundColor, color:color}}>{icon} {name}</span>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () =>{\r\n        let tags = this.props.languages\r\n        if(tags&&tags.length>0){\r\n            tags = tags.concat(this.props.tools)\r\n        }else{\r\n            tags = this.props.tools\r\n        }\r\n        this.props.updateTags(tags)\r\n        if(this.props.update)\r\n            this.props.update()\r\n    }\r\n\r\n    render(){\r\n        let columns = 0;\r\n        if(this.props.width){\r\n            if(this.props.width+30>=16*130)\r\n                columns = 5\r\n            else if(this.props.width+30>=16*100)\r\n                columns = 4\r\n            else if(this.props.width+30>=16*75)\r\n                columns = 3\r\n            else if(this.props.width+30>=16*40)\r\n                columns = 2\r\n            else \r\n                columns = 1\r\n        }\r\n        let firstYear = this.props.firstYear?this.props.firstYear:this.state.firstYear?this.state.firstYear:null\r\n        let firstMonth = this.props.firstMonth?this.props.firstMonth:this.state.firstMonth?this.state.firstMonth:null\r\n        let start = this.props.firstYear?Date.parse(this.props.firstMonth+\" \"+this.props.firstYear):this.state.start;\r\n        let lastYear = this.props.lastYear?this.props.lastYear:this.state.lastYear?this.state.lastYear:null\r\n        let lastMonth = this.props.lastMonth?this.props.lastMonth:this.state.lastMonth?this.state.lastMonth:null\r\n        if(!lastYear&&firstYear)\r\n            lastYear = firstYear\r\n        if(!firstYear&&lastYear)\r\n            firstYear = lastYear\r\n        if(!lastMonth&&firstMonth)\r\n            lastMonth = firstMonth\r\n        if(!firstMonth&&lastMonth)\r\n            firstMonth = lastMonth\r\n        let end = this.props.lastYear?Date.parse(this.props.lastMonth+\" \"+this.props.lastYear):this.state.end;\r\n        let filterTerms = [];\r\n        let languages = []\r\n        if(this.props.languages){\r\n            if(this.state.language&&!this.props.languages.includes(this.state.language))\r\n                this.props.languages.push(this.state.language)\r\n            for(let lang of this.props.languages){\r\n                languages.push(this.formatName(lang))\r\n                filterTerms.push(lang)\r\n            }\r\n        }else if(this.state.language){\r\n            languages.push(this.formatName(this.state.language))\r\n            filterTerms.push(this.state.language)\r\n        }\r\n        let tools = []\r\n        if(this.props.tools){\r\n            for(let tool of this.props.tools){\r\n                tools.push(this.formatName(tool))\r\n                filterTerms.push(tool)\r\n            }\r\n        }\r\n        let types = []\r\n        if(this.props.types){\r\n            for(let type of this.props.types){\r\n                types.push(this.formatName(type))\r\n                filterTerms.push(type)\r\n            }\r\n        }\r\n        let imgSrc = this.props.img?this.props.img:this.props.project?`https://api.microlink.io?url=${encodeURIComponent(this.props.project)}&screenshot=true&embed=screenshot.url`:this.props.page?`https://api.microlink.io?url=${encodeURIComponent(this.props.page)}&screenshot=true&embed=screenshot.url`:null//\"https://codyhouse.co/demo/squeezebox-portfolio-template/img/img.png\"\r\n        let btnSize = !!this.props.project&&!!this.props.page&&(this.props.code||this.state.code)&&window.innerWidth<420?\"btn-sm\":\"\"\r\n        return(\r\n            <div className=\"card\" data-filter={JSON.stringify(filterTerms)} style={this.props.width?{width:(this.props.width-20*(columns-1))/columns}:null}>\r\n                {imgSrc?<img onLoad={this.componentDidUpdate} onError={this.componentDidUpdate} className=\"card-img-top\" src={imgSrc} alt={`Image depicting ${this.props.title?this.props.title:this.state.title}`}/>:null}\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">{this.props.title?this.props.title:this.state.title}</h4>\r\n                    {firstYear||firstMonth||lastYear||lastMonth?firstYear==lastYear&&firstMonth==lastMonth?<h6 class=\"card-subtitle mb-2 text-muted time\" data-start={start} data-end={end}>{firstMonth} {firstYear}</h6>:<h6 class=\"card-subtitle mb-2 text-muted time\" data-start={firstMonth+\" \"+firstYear} data-end={lastMonth+\" \"+lastYear}>{firstMonth} {firstYear} - {lastMonth} {lastYear}</h6>:null}\r\n                    <p class=\"card-text\">{this.props.description?this.props.description:this.state.description}</p>\r\n                    <div class=\"d-flex justify-content-around\">\r\n                        {this.props.project?<a href={this.props.project} class={`btn btn-outline-success ${btnSize}`}>Open Project</a>:null}\r\n                        {this.props.page?<a href={this.props.page} class={`btn btn-outline-primary ${btnSize}`}>View Project Page</a>:null}\r\n                        {this.props.code||this.state.code?<a href={this.props.code?this.props.code:this.state.code} class={`btn btn-outline-secondary ${btnSize}`}>View Code</a>:null}\r\n                    </div>\r\n                </div>\r\n                {languages.length>0||tools.length>0||types.length>0?<div class=\"card-footer\">{languages}{languages.length>0?<br/>:null}{tools}{tools.length>0?<br/>:null}{types}</div>:null}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Isotope from 'isotope-layout';\r\nimport ProjectCard from './ProjectCard';\r\n\r\nvar globalKeys = [];\r\nvar globalSortKey = [];\r\nvar globalSortAscending = false;\r\n\r\n// Container for isotope grid\r\nexport default class MasonryCardDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isotope: null, width:null};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"item-grid\" style={{overflowY: \"hidden\"}}>\r\n                {this.props.children.map((childa)=>{\r\n                    var {...other} = childa.props\r\n                    return(\r\n                        <ProjectCard\r\n                            {...other}\r\n                            update = {this.componentDidUpdate.bind(this)}\r\n                            updateTags = {this.props.updateTags}\r\n                            width = {this.state.width}\r\n                            key= {childa.props.title}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    updateDimensions = () =>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        this.setState({width:node.offsetWidth})\r\n    }\r\n    // set up isotope\r\n    componentDidMount() {\r\n        const node = ReactDOM.findDOMNode(this);\r\n        if(!this.state.width)\r\n            this.updateDimensions()\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n        if (!this.state.isotope) {\r\n            this.setState({\r\n                isotope: new Isotope( node, {\r\n                    itemSelector: '.card',\r\n                    masonry: {\r\n                        horizontalOrder: true,\r\n                        gutter: 20\r\n                    },\r\n                    percentPosition: true,\r\n                    getSortData: {\r\n                        start: function(itemElem) {\r\n                            if(itemElem.getElementsByClassName('time').length>0&&Number(itemElem.getElementsByClassName('time')[0].dataset.start))\r\n                                return Number(itemElem.getElementsByClassName('time')[0].dataset.start)\r\n                            return null;\r\n                        },\r\n                        end: function(itemElem) {\r\n                            if(itemElem.getElementsByClassName('time').length>0&&Number(itemElem.getElementsByClassName('time')[0].dataset.end))\r\n                                return Number(itemElem.getElementsByClassName('time')[0].dataset.end)\r\n                            return Infinity;\r\n                        },\r\n                    },\r\n                  })\r\n            });\r\n        } else {\r\n            this.state.isotope.reloadItems();\r\n        }\r\n    }\r\n\r\n    setSort = (key, switchSort) =>{\r\n        globalSortKey = [key,'original-order'];\r\n        globalSortAscending = switchSort;\r\n        this.state.isotope.arrange({ \r\n            sortBy: globalSortKey,\r\n            sortAscending: {\r\n                start: globalSortAscending?true:false,\r\n                end:globalSortAscending?true:false,\r\n                \"original-order\":true\r\n            }\r\n                \r\n        })\r\n    }\r\n\r\n    updateFilter = (keys) =>{\r\n        globalKeys = keys;\r\n        this.state.isotope.arrange({ filter: function(){\r\n            if(globalKeys)\r\n                for(let key of globalKeys)\r\n                    if(!JSON.parse(this.dataset.filter).includes(key))\r\n                        return false\r\n            return true\r\n        }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    // update isotope layout\r\n    componentDidUpdate() {\r\n        if (this.state.isotope) {\r\n            this.state.isotope.reloadItems();\r\n            this.state.isotope.layout();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ProjectCard from './Components/ProjectCard'\r\nexport const Projects = [\r\n    <ProjectCard \r\n        title=\"Kihtrak.com\" \r\n        img={require('./Imgs/Karthik-compressed.jpg')} \r\n        description=\"A compilation of my projects! The website you are viewing right now\" \r\n        project=\"http://kihtrak.com\"\r\n        code=\"https://github.com/KihtrakRaknas/KihtrakRaknas.github.io\"\r\n        RepoName=\"KihtrakRaknas.github.io\"\r\n        GithubBranch=\"Source\"\r\n        languages={[\"JavaScript\",\"React\"]}\r\n        types={[\"Website\"]}\r\n    />,\r\n    <ProjectCard \r\n        title=\"GradeView Server Side Code\" \r\n        RepoName=\"GradeView\"\r\n        languages={[\"JavaScript\",\"Node.js\"]}\r\n        types={[\"Server\"]}\r\n    />,\r\n    <ProjectCard \r\n        title=\"GradeView - iOS and Andriod App\"\r\n        RepoName=\"GradeViewApp\" \r\n        page=\"https://gradeview.kihtrak.com/\" \r\n        tools={[\"Firebase Cloud Firestore\",\"Google Cloud Functions\",\"Expo API\"]} \r\n        languages={[\"JavaScript\",\"React Native\"]}\r\n        types={[\"iOS App\",\"Andriod App\"]}\r\n    />,\r\n    <ProjectCard\r\n        title=\"REDirector\"\r\n        RepoName=\"RED\" \r\n        project=\"http://red.kihtrak.com\"\r\n        tools={[\"Firebase Realtime Database\"]} \r\n        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n        lastMonth=\"Febuary\"\r\n        lastYear=\"2019\"\r\n        types={[\"Website\"]}\r\n    />,\r\n    <ProjectCard\r\n        title=\"Potato Co.\"\r\n        RepoName=\"Potato-co\" \r\n        project=\"https://potato.kihtrak.com/\" \r\n        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n        types={[\"Website\"]}\r\n    />,\r\n    <ProjectCard \r\n        title=\"Old Homepage\"\r\n        RepoName=\"Old-Homepage\"\r\n        firstMonth=\"November\"\r\n        lastMonth=\"November\"\r\n        firstYear=\"2017\"\r\n        lastYear=\"2017\"\r\n        project=\"http://old.kihtrak.com\"\r\n        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n        types={[\"Website\"]}\r\n    />,\r\n    <ProjectCard \r\n        title=\"Quick Set Up\"\r\n        RepoName=\"setup\"\r\n        project=\"https://setup.kihtrak.com/\"\r\n        types={[\"Website\"]}\r\n    />,\r\n    <ProjectCard \r\n        RepoName=\"Basic Calculator\"\r\n        code=\"https://github.com/KihtrakRaknas/Calculator\"\r\n        project=\"https://play.google.com/store/apps/details?id=com.kihtrak.calculator\"\r\n        languages={[\"Java\"]}\r\n        tools={[\"Andriod Studio\"]}\r\n        types={[\"Andriod App\"]}\r\n        firstMonth=\"October\"\r\n        lastMonth=\"October\"\r\n        firstYear=\"2018\"\r\n        lastYear=\"2018\"\r\n    />,\r\n    <ProjectCard\r\n        title=\"3D Shooter\"\r\n        RepoName=\"3d-shooter\"\r\n    />,\r\n    <ProjectCard\r\n        title=\"750S Team Website\"\r\n        //RepoName=\"3d-shooter\"\r\n        project=\"https://750s.github.io\"\r\n    />,\r\n    <ProjectCard\r\n        title=\"3D-Maze\"\r\n        RepoName=\"3D-Maze\"\r\n        project=\"https://github.com/KihtrakRaknas/3D-Maze/raw/master/3D-Maze.jar\"\r\n        languages={[\"Java\"]}\r\n    />   \r\n];\r\n","import React from 'react';\r\nimport ProjectCard from '../Components/ProjectCard'\r\nimport './Projects.css';\r\nimport MasonryCardDisplay from '../Components/MasonryCardDisplay';\r\nimport Select from 'react-select';\r\nimport {Projects} from '../Projects';\r\n\r\nexport default class ProjectsPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.masonry = React.createRef();\r\n        //this.masonry.current.updateFilter()\r\n        this.state = {\r\n            reverseSort:false,\r\n            showMobileBtns:false,\r\n            tags:[]\r\n        }\r\n      }\r\n\r\n      sortBtns = ()=>{\r\n            return(                        \r\n            <div class=\"btn-group btn-group-toggle mt-2\" data-toggle=\"buttons\">\r\n                <label class=\"btn btn-secondary active\" onClick={()=>{this.masonry.current.setSort(\"original-order\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Default\r\n                </label>\r\n                <label class=\"btn btn-secondary\" onClick={()=>{this.masonry.current.setSort(\"start\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Date Created\r\n                </label>\r\n                <label class=\"btn btn-secondary\" onClick={()=>{this.masonry.current.setSort(\"end\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Date Finished\r\n                </label>\r\n            </div>\r\n            )\r\n      }\r\n      filterDropDowns = ()=>{\r\n        let searchOptions = [];\r\n        for(let tag of this.state.tags)\r\n            searchOptions.push({value:tag,label:tag});\r\n        console.log(searchOptions)\r\n        return(\r\n            <div>\r\n                <Select className=\"mt-2\" options={searchOptions} placeholder=\"Filter by tags\" onChange={this.filterSelected} isMulti={true}/>\r\n            </div>\r\n        )\r\n      }\r\n\r\n      filterSelected = (selctions) => {\r\n        if(selctions)\r\n            this.masonry.current.updateFilter(JSON.parse(JSON.stringify(selctions)).map((item)=>{return item.label}))\r\n        else   \r\n            this.masonry.current.updateFilter([]);\r\n      }\r\n\r\n    updateTags = (tags) =>{\r\n        let newTags = []\r\n        if(tags)\r\n            for(let tag of tags)\r\n                if(tag&&this.state.tags.indexOf(tag) === -1)\r\n                    newTags.push(tag)\r\n        if(newTags.length>0)\r\n            this.setState({\r\n                tags: this.state.tags.concat(newTags),\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center display-2\">Projects</h1>\r\n                <br/>\r\n                <div class=\"d-none d-md-block\">\r\n                    <div class=\"form-row\">\r\n                        <div class=\"col-6\">\r\n                            {this.sortBtns()}\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            {this.filterDropDowns()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-md-none text-center\">\r\n                    <button type=\"button\" class=\"btn btn-outline-info\" style={{display:this.state.showMobileBtns?\"none\":\"inline-block\"}} onClick={()=>this.setState({showMobileBtns:true})}>Sort/Filter</button>\r\n                    <div style={{display:this.state.showMobileBtns?\"block\":\"none\"}}>\r\n                        {this.sortBtns()}\r\n                        {this.filterDropDowns()}   \r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <MasonryCardDisplay ref={this.masonry} updateTags={this.updateTags.bind(this)}>\r\n                    {Projects}\r\n                </MasonryCardDisplay>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n                <div class=\"card-columns\">\r\n                    <ProjectCard \r\n                        title=\"Kihtrak.com\" \r\n                        img={require('../Imgs/Karthik.JPG')} \r\n                        description=\"A compilation of my projects! The website you are viewing right now\" \r\n                        project=\"http://kihtrak.com\"\r\n                        code=\"https://github.com/KihtrakRaknas/KihtrakRaknas.github.io\"\r\n                        RepoName=\"KihtrakRaknas.github.io\"\r\n                        GithubBranch=\"Source\"\r\n                        languages={[\"JavaScript\",\"React\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView Server Side Code\" \r\n                        RepoName=\"GradeView\"\r\n                        languages={[\"JavaScript\",\"Node.js\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView - iOS and Andriod App\"\r\n                        RepoName=\"GradeViewApp\" \r\n                        page=\"https://gradeview.kihtrak.com/\" \r\n                        tools={[\"Firebase Cloud Firestore\",\"Google Cloud Functions\",\"Expo API\"]} \r\n                        languages={[\"JavaScript\",\"React Native\"]}\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"REDirector\"\r\n                        RepoName=\"RED\" \r\n                        project=\"http://red.kihtrak.com\"\r\n                        tools={[\"Firebase Realtime Database\"]} \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                        lastMonth=\"Febuary\"\r\n                        lastYear=\"2019\"\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"Potato Co.\"\r\n                        RepoName=\"Potato-co\" \r\n                        project=\"https://potato.kihtrak.com/\" \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"Old Homepage\"\r\n                        RepoName=\"Old-Homepage\"\r\n                        firstMonth=\"November\"\r\n                        lastMonth=\"November\"\r\n                        firstYear=\"2017\"\r\n                        lastYear=\"2017\"\r\n                        project=\"http://old.kihtrak.com\"\r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    </div>\r\n*/","import React from 'react';\r\nimport Jump from 'react-reveal/Jump';\r\nimport Tada from 'react-reveal/Tada';\r\nimport './AroundTheWeb.css'\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default class AroundTheWeb extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            captcha:false,\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 class=\"text-center display-3\">Karthik Sankar Around The Web</h1>\r\n                <p class=\"txtAroundWeb text-center\">Wait, is this the Karthik Sankar that I'm thinking of? See if any of these help you identify me:</p>\r\n                <br/>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-4 text-center mb-4\">\r\n                        <a href=\"https://www.instagram.com/kihtrakr/\">\r\n                            <img class=\"aroundWebImg\" alt=\"Instagram Logo\" loading=\"lazy\" src=\"https://instagram-brand.com/wp-content/uploads/2016/11/Instagram_AppIcon_Aug2017.png?w=300\"/>\r\n                            <strong class=\"id ml-4\">@KihtrakR</strong>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col-md-4 text-center mb-4\">\r\n                        <a href=\"https://github.com/kihtrakRaknas\">\r\n                            <img class=\"aroundWebImg\" alt=\"Github Logo\" loading=\"lazy\" src=\"https://image.flaticon.com/icons/svg/25/25231.svg\"/>\r\n                            <strong class=\"id ml-4\">KihtrakRaknas\r\n                            </strong>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col-md-4 text-center mb-4\">\r\n                        <a href=\"https://linkedin.com/in/karthik-sankar-a5a523178\">\r\n                            <img class=\"aroundWebImg\" alt=\"LinkedIn Logo\" loading=\"lazy\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ca/LinkedIn_logo_initials.png\"/>\r\n                            <strong class=\"id ml-4\">Karthik Sankar</strong>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                <h1 class=\"text-center display-4\">Contact Me!</h1>\r\n                <br/>\r\n                {this.state.captcha?null:<div class=\"contain\">\r\n                    <ReCAPTCHA\r\n                        sitekey=\"6LfXL7gUAAAAAIdctYLl1yDvN_vS8j2IHqgHbppS\"\r\n                        onChange={()=>this.setState({captcha:true,email:\"contact\"})}\r\n                    />\r\n                </div>}\r\n                {this.state.captcha?<Tada><p class=\"email text-center\">Email me at: <a href={\"mailto:\"+this.state.email+\"@kihtrak.com\"}>{this.state.email}@kihtrak.com</a></p></Tada>:<p class=\"email text-center\">Please complete the captcha to view contact information</p>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './Homepage.css';\r\nimport favicon from './favicon.ico';\r\nimport Top from './Sections/Top';\r\nimport AboutMe from './Sections/AboutMe';\r\nimport Projects from './Sections/ProjectsPage';\r\nimport AroundTheWeb from './Sections/AroundTheWeb';\r\n\r\nexport default class Homepage extends React.Component {\r\n    render(){\r\n        return (   \r\n            <div>\r\n                <Top/>\r\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n                    <a class=\"navbar-brand\" href=\"#\"><img src={favicon} style={{height:\"100%\"}} alt=\"3D K spinning\"></img><span>arthik</span></a>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div class=\"navbar-nav ml-auto\">\r\n                        <a class=\"nav-item nav-link\" href=\"#About-Me\">About Me</a>\r\n                        <a class=\"nav-item nav-link\" href=\"#Projects\">Projects</a>\r\n                        <a class=\"nav-item nav-link\" href=\"#Around-The-Web\">Around the Web</a>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"container-fluid\">\r\n                    <h1 class=\"display-1 text-center\">Karthik Sankar</h1>\r\n                    <br/>\r\n                    <br/>\r\n                    <div id=\"About-Me\"><AboutMe/></div>\r\n                    <br/><br/><br/>\r\n                    <div id=\"Projects\"><Projects/></div>\r\n                    <br/><br/><br/>\r\n                    <div id=\"Around-The-Web\"><AroundTheWeb/></div>\r\n                    <br/><br/><br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Homepage from './Homepage';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Homepage />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}