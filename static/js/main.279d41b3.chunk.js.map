{"version":3,"sources":["Imgs/Karthik.JPG","logo.svg","favicon.ico","App.js","Sections/Top.js","Sections/AboutMe.js","Components/ProjectCard.js","Components/MasonryCardDisplay.js","Sections/Projects.js","Homepage.js","serviceWorker.js","index.js"],"names":["module","exports","App","ReactRotatingText","require","Top","bgImage","bgImageAlt","strength","style","height","centered","className","speed","fontSize","color","fontWeight","items","React","Component","AboutMe","vmin","window","innerHeight","innerWidth","state","min","this","getMin","setState","updateDimensions","addEventListener","bind","removeEventListener","bottom","class","left","icon","faSearchLocation","size","Math","round","marginRight","faSchool","faRobot","href","faBriefcase","right","faLaptopCode","ProjectCard","props","formatName","name","backgoundColor","faJs","includes","faReact","faNodeJs","faGoogle","faFire","faHtml5","faCss3Alt","backgroundColor","componentDidUpdate","updateTags","languages","tools","update","RepoName","fetch","GithubUsername","GithubBranch","then","response","json","message","lastMonth","Date","commit","author","date","toLocaleString","month","lastYear","getFullYear","end","getTime","catch","error","console","log","description","title","code","firstMonth","created_at","firstYear","start","svn_url","language","columns","width","parse","filterTerms","push","lang","tool","imgSrc","img","project","encodeURIComponent","page","btnSize","data-filter","JSON","stringify","onLoad","onError","src","alt","data-start","data-end","length","globalKeys","globalSortKey","globalSortAscending","MasonryCardDisplay","node","ReactDOM","findDOMNode","offsetWidth","setSort","key","switchSort","isotope","arrange","sortBy","sortAscending","updateFilter","keys","filter","dataset","overflowY","children","map","childa","other","reloadItems","Isotope","itemSelector","masonry","horizontalOrder","gutter","percentPosition","getSortData","itemElem","getElementsByClassName","Number","Infinity","layout","Projects","sortBtns","data-toggle","onClick","current","reverseSort","type","id","autocomplete","checked","filterDropDowns","langElements","toolElements","value","onChange","event","filterSelected","target","disabled","selected","val","selectedLang","newArr","selectedTool","newLang","indexOf","newTools","concat","createRef","showMobileBtns","display","ref","Homepage","favicon","data-target","aria-controls","aria-expanded","aria-label","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.279d41b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Karthik.59770943.JPG\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.291eccc8.ico\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div >\n       <p class=\"text-center\">\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { Parallax as ImgPara } from 'react-parallax';\r\nimport Parallax from 'react-rellax';\r\nimport './Top.css';\r\nvar ReactRotatingText = require('react-rotating-text');\r\n\r\nexport default class Top extends React.Component {\r\n    render(){\r\n        return(\r\n            <ImgPara\r\n                bgImage = {require('../Imgs/Karthik.JPG')}\r\n                bgImageAlt=\"A picture of Karthik Sankar\"\r\n                strength={-300}\r\n            >\r\n                <div style={{ height: '100vh' }} >\r\n                    <Parallax centered={true} className=\"center-vert\" speed={10} style={{fontSize:\"10vh\",color:\"black\", fontWeight: \"bold\"}}><ReactRotatingText items={['Karthik Sankar', 'Kihtrak Raknas']} /></Parallax>\r\n                </div>\r\n            </ImgPara>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Parallax as ImgPara } from 'react-parallax';\r\nimport Parallax from 'react-rellax';\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport Jump from 'react-reveal/Jump';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome , faSchool ,faSearchLocation, faBriefcase , faRobot, faLaptopCode} from '@fortawesome/free-solid-svg-icons'\r\nimport './AboutMe.css'\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Slide from 'react-reveal/Slide';\r\nvar ReactRotatingText = require('react-rotating-text');\r\n\r\n\r\nexport default class AboutMe extends React.Component {\r\n    constructor(){\r\n        super();\r\n        var vmin = window.innerHeight\r\n        if(window.innerWidth<vmin)\r\n            vmin = window.innerWidth\r\n        this.state = {\r\n            vmin:  vmin\r\n        }\r\n\r\n    }\r\n\r\n    getMin() {\r\n        if(window.innerWidth<window.innerHeight)\r\n            return window.innerWidth\r\n        return window.innerHeight\r\n    }\r\n\r\n    updateDimensions() {\r\n        var min = this.getMin()\r\n            this.setState({ vmin: min });\r\n    }\r\n\r\n\r\n    \r\n    componentDidMount() {\r\n        this.updateDimensions();\r\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <br/>\r\n                <br/>\r\n                <Bounce bottom>\r\n                    <h1 className=\"text-center display-2\">About Me</h1>\r\n                </Bounce>\r\n                <Jump>\r\n                    \r\n                </Jump>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 text-center\">\r\n                        <Zoom left>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faSearchLocation} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">New Jersery</span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faSchool} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">South Brunswick High School</span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faRobot} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">Captain of <a href=\"http://750s.github.io\">750S</a></span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={faBriefcase} size={Math.round(this.state.vmin/350)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                                <span class=\"icon-text\">Teach programming @ Code Ninjas</span>\r\n                            </div>\r\n                            <br/>\r\n                        </Zoom>\r\n                    </div>\r\n                    <div class=\"col-md-6 text-center\">\r\n                        <Slide right>\r\n                            <FontAwesomeIcon icon={faLaptopCode} size={Math.round(this.state.vmin/175)+\"x\"} style={{marginRight:\"10px\"}}/>\r\n                            <p className=\"about-txt\">Full stack developer</p>\r\n                            <p className=\"about-txt\">Fluent in HTML, CSS, Javascript & Node.js</p>\r\n                            <p className=\"about-txt\">Favorate frameworks: React & React Native</p>\r\n                            <p className=\"about-txt\">Favorate Editors: Andriod Studio, Visual Studio Code & Xcode</p>\r\n                        </Slide>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faJs, faReact, faNodeJs, faGoogle, faHtml5, faCss3Alt} from '@fortawesome/free-brands-svg-icons'\r\nimport { faFire} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class ProjectCard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if(this.props.RepoName){\r\n            fetch(\r\n                `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}/branches/${this.props.GithubBranch?this.props.GithubBranch:\"master\"}`\r\n            )\r\n            .then(response => {\r\n                response.json().then(json => {\r\n                    if(!json.message)\r\n                        this.setState({\r\n                            lastMonth: new Date(json.commit.commit.author.date).toLocaleString('default', { month: 'long' }),\r\n                            lastYear: new Date(json.commit.commit.author.date).getFullYear(),\r\n                            end: new Date(json.commit.commit.author.date).getTime()\r\n                        });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n            fetch(\r\n                `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}`\r\n            )\r\n            .then(response => {\r\n                response.json().then(json => {\r\n                    if(!json.message)\r\n                        this.setState({\r\n                            firstMonth: new Date(json.created_at).toLocaleString('default', { month: 'long' }),\r\n                            firstYear: new Date(json.created_at).getFullYear(),\r\n                            start: new Date(json.created_at).getTime(),\r\n                            description: json.description,\r\n                            title: json.name,\r\n                            code: json.svn_url,\r\n                            language: json.language,\r\n                        });\r\n                    else   \r\n                        this.setState({\r\n                            description: \"Additional details couldn't be loaded in. Try again tommarrow or use a different network.\",\r\n                            title: this.props.RepoName,\r\n                            code: `https://api.github.com/repos/${this.props.GithubUsername?this.props.GithubUsername:\"KihtrakRaknas\"}/${this.props.RepoName}`,\r\n                        });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    formatName = (name) =>{\r\n        let icon = null;\r\n        let backgoundColor = \"black\";\r\n        let color = \"white\"\r\n        if(name == \"JavaScript\"){\r\n            icon = <FontAwesomeIcon icon={faJs}/>\r\n            backgoundColor = \"#f0db4f\"\r\n            color = \"black\"\r\n        }else if(name && name.includes(\"React\")){\r\n            icon = <FontAwesomeIcon icon={faReact}/>\r\n            backgoundColor = \"#61dbfb\"\r\n            color = \"black\"\r\n        }else if(name == \"Node.js\"){\r\n            icon = <FontAwesomeIcon icon={faNodeJs}/>\r\n            backgoundColor = \"#68A063\"\r\n            color = \"white\"\r\n        }else if(name&&name.includes(\"Google\")){\r\n            icon = <FontAwesomeIcon icon={faGoogle}/>\r\n            backgoundColor = \"#4285F4\"\r\n            color = \"white\"\r\n        }else if(name&&name.includes(\"Firebase\")){\r\n            icon = <FontAwesomeIcon icon={faFire}/>\r\n            backgoundColor = \"#FFCA28\"\r\n            color = \"black\"\r\n        }else if(name&&name.includes(\"HTML\")){\r\n            icon = <FontAwesomeIcon icon={faHtml5}/>\r\n            backgoundColor = \"#F16529\"\r\n            color = \"white\"\r\n        }else if(name == \"CSS\"){\r\n            icon = <FontAwesomeIcon icon={faCss3Alt}/>\r\n            backgoundColor = \"#264de4\"\r\n            color = \"white\"\r\n        }\r\n        return(\r\n            <span class=\"badge\" style={{marginRight:\"5px\", backgroundColor:backgoundColor, color:color}}>{icon} {name}</span>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () =>{\r\n        this.props.updateTags(this.props.languages,this.props.tools)\r\n        if(this.props.update)\r\n            this.props.update()\r\n    }\r\n\r\n    render(){\r\n        let columns = 0;\r\n        if(this.props.width){\r\n            if(this.props.width+30>=16*130)\r\n                columns = 5\r\n            else if(this.props.width+30>=16*100)\r\n                columns = 4\r\n            else if(this.props.width+30>=16*75)\r\n                columns = 3\r\n            else if(this.props.width+30>=16*40)\r\n                columns = 2\r\n            else \r\n                columns = 1\r\n        }\r\n        let firstYear = this.props.firstYear?this.props.firstYear:this.state.firstYear?this.state.firstYear:null\r\n        let firstMonth = this.props.firstMonth?this.props.firstMonth:this.state.firstMonth?this.state.firstMonth:null\r\n        let start = this.props.firstYear?Date.parse(this.props.firstMonth+\" \"+this.props.firstYear):this.state.start;\r\n        let lastYear = this.props.lastYear?this.props.lastYear:this.state.lastYear?this.state.lastYear:null\r\n        let lastMonth = this.props.lastMonth?this.props.lastMonth:this.state.lastMonth?this.state.lastMonth:null\r\n        if(!lastYear&&firstYear)\r\n            lastYear = firstYear\r\n        if(!firstYear&&lastYear)\r\n            firstYear = lastYear\r\n        if(!lastMonth&&firstMonth)\r\n            lastMonth = firstMonth\r\n        if(!firstMonth&&lastMonth)\r\n            firstMonth = lastMonth\r\n        let end = this.props.lastYear?Date.parse(this.props.lastMonth+\" \"+this.props.lastYear):this.state.end;\r\n        let filterTerms = [];\r\n        let languages = []\r\n        if(this.props.languages){\r\n            if(this.state.language&&!this.props.languages.includes(this.state.language))\r\n                this.props.languages.push(this.state.language)\r\n            for(let lang of this.props.languages){\r\n                languages.push(this.formatName(lang))\r\n                filterTerms.push(lang)\r\n            }\r\n        }else if(this.state.language){\r\n            languages.push(this.formatName(this.state.language))\r\n            filterTerms.push(this.state.language)\r\n        }\r\n        let tools = []\r\n        if(this.props.tools){\r\n            for(let tool of this.props.tools){\r\n                tools.push(this.formatName(tool))\r\n                filterTerms.push(tool)\r\n            }\r\n        }\r\n        let imgSrc = this.props.img?this.props.img:this.props.project?`https://api.microlink.io?url=${encodeURIComponent(this.props.project)}&screenshot=true&embed=screenshot.url`:this.props.page?`https://api.microlink.io?url=${encodeURIComponent(this.props.page)}&screenshot=true&embed=screenshot.url`:null//\"https://codyhouse.co/demo/squeezebox-portfolio-template/img/img.png\"\r\n        let btnSize = !!this.props.project&&!!this.props.page&&(this.props.code||this.state.code)&&window.innerWidth<420?\"btn-sm\":\"\"\r\n        return(\r\n            <div className=\"card\" data-filter={JSON.stringify(filterTerms)} style={this.props.width?{width:(this.props.width-20*(columns-1))/columns}:null}>\r\n                {imgSrc?<img onLoad={this.componentDidUpdate} onError={this.componentDidUpdate} className=\"card-img-top\" src={imgSrc} alt={`Image depicting ${this.props.title?this.props.title:this.state.title}`}/>:null}\r\n                <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">{this.props.title?this.props.title:this.state.title}</h4>\r\n                    {firstYear||firstMonth||lastYear||lastMonth?firstYear==lastYear&&firstMonth==lastMonth?<h6 class=\"card-subtitle mb-2 text-muted time\" data-start={start} data-end={end}>{firstMonth} {firstYear}</h6>:<h6 class=\"card-subtitle mb-2 text-muted time\" data-start={firstMonth+\" \"+firstYear} data-end={lastMonth+\" \"+lastYear}>{firstMonth} {firstYear} - {lastMonth} {lastYear}</h6>:null}\r\n                    <p class=\"card-text\">{this.props.description?this.props.description:this.state.description}</p>\r\n                    <div class=\"d-flex justify-content-around\">\r\n                        {this.props.project?<a href={this.props.project} class={`btn btn-outline-success ${btnSize}`}>Open Project</a>:null}\r\n                        {this.props.page?<a href={this.props.page} class={`btn btn-outline-primary ${btnSize}`}>View Project Page</a>:null}\r\n                        {this.props.code||this.state.code?<a href={this.props.code?this.props.code:this.state.code} class={`btn btn-outline-secondary ${btnSize}`}>View Code</a>:null}\r\n                    </div>\r\n                </div>\r\n                {languages.length>0||tools.length>0?<div class=\"card-footer\">{languages}<br/>{tools}</div>:null}\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Isotope from 'isotope-layout';\r\nimport ProjectCard from './ProjectCard';\r\n\r\nvar globalKeys = [];\r\nvar globalSortKey = [];\r\nvar globalSortAscending = false;\r\n\r\n// Container for isotope grid\r\nexport default class MasonryCardDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isotope: null, width:null};\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"item-grid\" style={{overflowY: \"hidden\"}}>\r\n                {this.props.children.map((childa)=>{\r\n                    var {...other} = childa.props\r\n                    return(\r\n                        <ProjectCard\r\n                            {...other}\r\n                            update = {this.componentDidUpdate.bind(this)}\r\n                            updateTags = {this.props.updateTags}\r\n                            width = {this.state.width}\r\n                            key= {childa.props.title}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    updateDimensions = () =>{\r\n        const node = ReactDOM.findDOMNode(this);\r\n        this.setState({width:node.offsetWidth})\r\n    }\r\n    // set up isotope\r\n    componentDidMount() {\r\n        const node = ReactDOM.findDOMNode(this);\r\n        if(!this.state.width)\r\n            this.updateDimensions()\r\n        window.addEventListener(\"resize\", this.updateDimensions);\r\n        if (!this.state.isotope) {\r\n            this.setState({\r\n                isotope: new Isotope( node, {\r\n                    itemSelector: '.card',\r\n                    masonry: {\r\n                        horizontalOrder: true,\r\n                        gutter: 20\r\n                    },\r\n                    percentPosition: true,\r\n                    getSortData: {\r\n                        start: function(itemElem) {\r\n                            if(itemElem.getElementsByClassName('time').length>0&&Number(itemElem.getElementsByClassName('time')[0].dataset.start))\r\n                                return Number(itemElem.getElementsByClassName('time')[0].dataset.start)\r\n                            return null;\r\n                        },\r\n                        end: function(itemElem) {\r\n                            if(itemElem.getElementsByClassName('time').length>0&&Number(itemElem.getElementsByClassName('time')[0].dataset.end))\r\n                                return Number(itemElem.getElementsByClassName('time')[0].dataset.end)\r\n                            return Infinity;\r\n                        },\r\n                    },\r\n                  })\r\n            });\r\n        } else {\r\n            this.state.isotope.reloadItems();\r\n        }\r\n    }\r\n\r\n    setSort = (key, switchSort) =>{\r\n        globalSortKey = [key,'original-order'];\r\n        globalSortAscending = switchSort;\r\n        this.state.isotope.arrange({ \r\n            sortBy: globalSortKey,\r\n            sortAscending: {\r\n                start: globalSortAscending?true:false,\r\n                end:globalSortAscending?true:false,\r\n                \"original-order\":true\r\n            }\r\n                \r\n        })\r\n    }\r\n\r\n    updateFilter = (keys) =>{\r\n        globalKeys = keys;\r\n        this.state.isotope.arrange({ filter: function(){\r\n            if(globalKeys)\r\n                for(let key of globalKeys)\r\n                    if(!JSON.parse(this.dataset.filter).includes(key))\r\n                        return false\r\n            return true\r\n        }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateDimensions);\r\n    }\r\n\r\n    // update isotope layout\r\n    componentDidUpdate() {\r\n        if (this.state.isotope) {\r\n            this.state.isotope.reloadItems();\r\n            this.state.isotope.layout();\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ProjectCard from '../Components/ProjectCard'\r\nimport './Projects.css';\r\nimport MasonryCardDisplay from '../Components/MasonryCardDisplay';\r\n\r\nexport default class Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.masonry = React.createRef();\r\n        //this.masonry.current.updateFilter()\r\n        this.state = {\r\n            reverseSort:false,\r\n            showMobileBtns:false,\r\n            languages:[],\r\n            tools:[]\r\n        }\r\n      }\r\n\r\n      sortBtns = ()=>{\r\n            return(                        \r\n            <div class=\"btn-group btn-group-toggle mt-2\" data-toggle=\"buttons\">\r\n                <label class=\"btn btn-secondary active\" onClick={()=>{this.masonry.current.setSort(\"original-order\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked/> Default\r\n                </label>\r\n                <label class=\"btn btn-secondary\" onClick={()=>{this.masonry.current.setSort(\"start\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> Date Created\r\n                </label>\r\n                <label class=\"btn btn-secondary\" onClick={()=>{this.masonry.current.setSort(\"end\",this.state.reverseSort)}}>\r\n                    <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> Date Finished\r\n                </label>\r\n            </div>\r\n            )\r\n      }\r\n      filterDropDowns = ()=>{\r\n        let langElements = [];\r\n        let toolElements = [];\r\n        for(let lang of this.state.languages)\r\n            langElements.push(<option value={lang}>{lang}</option>);\r\n        for(let tool of this.state.tools)\r\n            toolElements.push(<option value={tool}>{tool}</option>);\r\n        return(\r\n            <div>\r\n                <select class=\"btn btn-mini border-secondary mr-2 mt-2\" onChange={(event)=>{this.filterSelected(event.target.value)}}>\r\n                    <option value=\"\" disabled selected>Filter by language/framework</option>\r\n                    <option value=\"noneLang\">All</option>\r\n                    {langElements}\r\n                </select>\r\n                <span class=\"caret\"></span>\r\n                <select class=\"btn btn-mini border-secondary mt-2\" onChange={(event)=>{this.filterSelected(event.target.value)}}>\r\n                    <option value=\"\" disabled selected>Filter by additional tags</option>\r\n                    <option value=\"noneTool\">All</option>\r\n                    {toolElements}\r\n                </select>\r\n                <span class=\"caret\"></span>\r\n            </div>\r\n        )\r\n      }\r\n\r\n      filterSelected = (val) => {\r\n        if(this.state.languages.includes(val)||val==\"noneLang\"){\r\n            this.selectedLang = val\r\n            let newArr = [];\r\n            if(val!=\"noneLang\")\r\n                newArr.push(val)\r\n            if(this.selectedTool&&this.selectedTool!=\"noneTool\")\r\n                newArr.push(this.selectedTool)\r\n            this.masonry.current.updateFilter(newArr)\r\n        }\r\n        if(this.state.tools.includes(val)||val==\"noneTool\"){\r\n            this.selectedTool = val\r\n            let newArr = [];\r\n            if(val!=\"noneTool\")\r\n                newArr.push(val)\r\n            if(this.selectedLang&&this.selectedLang!=\"noneLang\")\r\n                newArr.push(this.selectedLang)\r\n            this.masonry.current.updateFilter(newArr)\r\n        }\r\n        \r\n      }\r\n\r\n    updateTags = (languages, tools) =>{\r\n        let newLang = []\r\n        if(languages)\r\n            for(let lang of languages)\r\n                if(this.state.languages.indexOf(lang) === -1)\r\n                    newLang.push(lang)\r\n        let newTools = []\r\n        if(tools)\r\n            for(let tool of tools)\r\n                if(this.state.tools.indexOf(tool) === -1)\r\n                    newTools.push(tool)\r\n        if(newLang.length>0)\r\n            this.setState({\r\n                languages: this.state.languages.concat(newLang),\r\n            });\r\n        if(newTools.length>0)\r\n            this.setState({\r\n                tools: this.state.tools.concat(newTools),\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center display-2\">Projects</h1>\r\n                <br/>\r\n                <div class=\"d-none d-md-block\">\r\n                    <div class=\"form-row justify-content-between\">\r\n                        {this.sortBtns()}\r\n                        {this.filterDropDowns()}\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-md-none text-center\">\r\n                    <button type=\"button\" class=\"btn btn-outline-info\" style={{display:this.state.showMobileBtns?\"none\":\"inline-block\"}} onClick={()=>this.setState({showMobileBtns:true})}>Sort/Filter</button>\r\n                    <div style={{display:this.state.showMobileBtns?\"block\":\"none\"}}>\r\n                        {this.sortBtns()}\r\n                        {this.filterDropDowns()}\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <MasonryCardDisplay ref={this.masonry} updateTags={this.updateTags.bind(this)}>\r\n                <ProjectCard \r\n                        title=\"Kihtrak.com\" \r\n                        img={require('../Imgs/Karthik.JPG')} \r\n                        description=\"A compilation of my projects! The website you are viewing right now\" \r\n                        project=\"http://kihtrak.com\"\r\n                        code=\"https://github.com/KihtrakRaknas/KihtrakRaknas.github.io\"\r\n                        RepoName=\"KihtrakRaknas.github.io\"\r\n                        GithubBranch=\"Source\"\r\n                        languages={[\"JavaScript\",\"React\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView Server Side Code\" \r\n                        RepoName=\"GradeView\"\r\n                        languages={[\"JavaScript\",\"Node.js\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView - iOS and Andriod App\"\r\n                        RepoName=\"GradeViewApp\" \r\n                        page=\"https://gradeview.kihtrak.com/\" \r\n                        tools={[\"Firebase Cloud Firestore\",\"Google Cloud Functions\",\"Expo API\"]} \r\n                        languages={[\"JavaScript\",\"React Native\"]}\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"REDirector\"\r\n                        RepoName=\"RED\" \r\n                        project=\"http://red.kihtrak.com\"\r\n                        tools={[\"Firebase Realtime Database\"]} \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                        lastMonth=\"Febuary\"\r\n                        lastYear=\"2019\"\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"Potato Co.\"\r\n                        RepoName=\"Potato-co\" \r\n                        project=\"https://potato.kihtrak.com/\" \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"Old Homepage\"\r\n                        RepoName=\"Old-Homepage\"\r\n                        firstMonth=\"November\"\r\n                        lastMonth=\"November\"\r\n                        firstYear=\"2017\"\r\n                        lastYear=\"2017\"\r\n                        project=\"http://old.kihtrak.com\"\r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                </MasonryCardDisplay>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n                <div class=\"card-columns\">\r\n                    <ProjectCard \r\n                        title=\"Kihtrak.com\" \r\n                        img={require('../Imgs/Karthik.JPG')} \r\n                        description=\"A compilation of my projects! The website you are viewing right now\" \r\n                        project=\"http://kihtrak.com\"\r\n                        code=\"https://github.com/KihtrakRaknas/KihtrakRaknas.github.io\"\r\n                        RepoName=\"KihtrakRaknas.github.io\"\r\n                        GithubBranch=\"Source\"\r\n                        languages={[\"JavaScript\",\"React\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView Server Side Code\" \r\n                        RepoName=\"GradeView\"\r\n                        languages={[\"JavaScript\",\"Node.js\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"GradeView - iOS and Andriod App\"\r\n                        RepoName=\"GradeViewApp\" \r\n                        page=\"https://gradeview.kihtrak.com/\" \r\n                        tools={[\"Firebase Cloud Firestore\",\"Google Cloud Functions\",\"Expo API\"]} \r\n                        languages={[\"JavaScript\",\"React Native\"]}\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"REDirector\"\r\n                        RepoName=\"RED\" \r\n                        project=\"http://red.kihtrak.com\"\r\n                        tools={[\"Firebase Realtime Database\"]} \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                        lastMonth=\"Febuary\"\r\n                        lastYear=\"2019\"\r\n                    />\r\n                    <ProjectCard\r\n                        title=\"Potato Co.\"\r\n                        RepoName=\"Potato-co\" \r\n                        project=\"https://potato.kihtrak.com/\" \r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"Old Homepage\"\r\n                        RepoName=\"Old-Homepage\"\r\n                        firstMonth=\"November\"\r\n                        lastMonth=\"November\"\r\n                        firstYear=\"2017\"\r\n                        lastYear=\"2017\"\r\n                        project=\"http://old.kihtrak.com\"\r\n                        languages={[\"JavaScript\",\"HTML\",\"CSS\"]}\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    <ProjectCard \r\n                        title=\"This page will be populated soon\"\r\n                    />\r\n                    </div>\r\n*/","import React from 'react';\r\nimport './Homepage.css';\r\nimport favicon from './favicon.ico';\r\nimport Top from './Sections/Top';\r\nimport AboutMe from './Sections/AboutMe';\r\nimport Projects from './Sections/Projects';\r\n\r\nexport default class Homepage extends React.Component {\r\n    render(){\r\n        return (   \r\n            <div>\r\n                <Top/>\r\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n                    <a class=\"navbar-brand\" href=\"#\"><img src={favicon} style={{height:\"100%\"}} alt=\"3D K spinning\"></img><span>arthik</span></a>\r\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div class=\"navbar-nav ml-auto\">\r\n                        <a class=\"nav-item nav-link\" href=\"#About-Me\">About Me</a>\r\n                        <a class=\"nav-item nav-link\" href=\"#Projects\">Projects</a>\r\n                        <a class=\"nav-item nav-link\" href=\"#3\">Around the Web</a>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"container-fluid\">\r\n                    <div id=\"About-Me\"><AboutMe/></div>\r\n                    <br/><br/><br/>\r\n                    <div id=\"Projects\"><Projects/></div>\r\n                    <h6 class=\"display-3 text-center\"><br/>THIS SITE IS STILL A WORK IN PROGRESS. </h6>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Homepage from './Homepage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Homepage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}